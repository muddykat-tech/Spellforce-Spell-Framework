#pragma once

#include "../../../api/sfsf.h"
#include "../../../asi/sf_asi.h"

typedef struct __attribute__((packed))
{
    uint16_t *first;
    uint16_t *data;
    uint16_t *post_last;
} ushort_list_node;

typedef struct __attribute__((packed))
{
    SF_CGdBuilding *CGdBuilding;
    void *CGdBuildingToolBox;
    void *autoclass30;
    SF_CGdFigure *CGdFigure;
    SF_CGdFigureJobs *CGdFigureJobs;
    void *CGdFigureToolBox;
    void *autoclass34;
    void *CGdFormation;
    void *CGdDoubleLinkList;
    void *CGdInfluenceMap;
    void *CGdObject;
    void *CGdObjectToolBox;
    void *CGdPlayer;
    void *CGdResource;
    SF_CGdSpell *CGdSpell;
    void *autoclass22;
    void *autoclass50;
    void *CGdVisibility;
    SF_CGdWorld *CGdWorld;
    SF_CGdWorldToolBox *CGdWorldToolBox;
    void *autoclass64;
    uint8_t figures_maybe[0xf2a];
    uint16_t unkn1;
    uint8_t figure_maybe2[0xfa2];
    uint16_t unkn2;
    uint8_t building_ally[0xfa2];
    uint16_t unkn3;
    uint8_t building_not_ally[0xfa2];
    uint16_t unkn4;
    uint32_t unkn5;
    SF_SGtFigureAction current_action;
    uint16_t current_action_min_rng;
    uint16_t current_action_max_rng;
    SF_String world_name;
    uint32_t can_be_target_maybe;
    uint16_t unkn6;
    uint8_t current_figure_sight_range_maybe;
    uint8_t unkn7;
    uint32_t figures_missing_hp;
    uint32_t current_figure_is_aggroed;
    uint32_t current_figure_is_not_mainchar_or_hero;
    uint32_t current_figure_has_amok;
    uint32_t unkn_flag1;
    uint32_t current_figure_is_mainchar;
    uint32_t current_figure_is_hero;
    uint32_t current_figure_has_owner;
    uint32_t manual_hit_target_maybe;
    uint32_t current_figure_is_tower;
    uint32_t current_figure_is_warrior;
    uint32_t something_related_to_ranking;
    uint8_t current_figure_target_type;
    uint16_t current_figure_target_index;
    SF_Coord current_figure_target_position;
    uint8_t unkn8;
    uint32_t current_hate;
    uint32_t current_ranking;
    uint8_t unkn_list[0xfa2];
    uint16_t unkn9;
    uint32_t current_figure_noaggroattack;
    uint32_t is_map_arena3;
    ushort_list_node some_figure_list[2000];
    ushort_list_node unkn_node;
    ushort_list_node another_figure_list[2000];
    uint32_t unkn_array[2000];
    uint16_t current_figure;
    SF_Coord current_figure_pos;
    uint16_t unkn10;
    uint32_t current_figure_is_combat_involved_maybe;
    uint32_t current_figure_has_aggro;
    uint32_t current_figure_has_demoralization;
    uint32_t unkn_flag2;
    uint32_t figures_max_hp;
    SF_CGdTargetData current_source_maybe;
    SF_CGdTargetData current_target;
    uint16_t unkn11;
    uint32_t force_process_figure_maybe;
    SF_CGdTargetData unknown_target;
    uint8_t unkn12;
    uint32_t some_ranking;
    uint32_t current_figure_is_pet;
    uint16_t current_figure_master;
    uint8_t unkn13;
    uint8_t unkn14;
    uint32_t figure_is_charmed_summon_maybe;
    uint32_t unkn_flag3;
    uint32_t current_target_level_possibly;
    uint32_t action_is_siege_aura;
} CGdAIBattleData;

typedef struct __attribute__((packed))
{
    void *vfTable;
    void *battleFactory;
    CGdAIBattleData BattleData;
} SF_CGdBattleDevelopment;